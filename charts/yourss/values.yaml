# Default values for yourss.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

yourss:
  image:
    repository: ghcr.io/essembeh/yourss
    # tag: main
    pullPolicy: IfNotPresent
  timezone: Europe/Paris
  logLevel: INFO
  cleanTitles: true
  theme: light
  # open actions can be: openModal, openTab or openEmbedded
  openPrimary: openModal
  openSecondary: openTab
  # Space-separated list of language codes to enable the language selector widget
  # Example: customLang: "FR EN ES"
  customLang: ""
  defaultChannels:
    - "@jonnygiger"
  users:
    []
    # - name: alice
    #   # password is optional
    #   password:
    #     # supported methods are
    #     #  argon2: example here https://gchq.github.io/CyberChef/#recipe=Argon2(%7B'option':'UTF8','string':'yourss%20secret%20salt'%7D,3,4096,1,32,'Argon2i','Encoded%20hash')&input=TXkgc2VjdXJlIHBhc3N3b3Jk
    #     #  clear: password are store in plain text
    #     method: argon2
    #     value: "$argon2i$v=19$m=4096,t=3,p=1$c29tZXNhbHQ$y+awVl4ev1h6eG8IbOrPAAjANRIbraM51FL50Pcf/B8"
    #   # override default app theme, supported values are 'light' and 'dark'
    #   theme: light
    #   channels:
    #     # channels can be
    #     #  a channel_id (starting with UC) like UCVooVnzQxPSTXTMzSi1s6uw
    #     #  a user (starting with @) like @jonnygiger
    #     - "@jonnygiger"
    #     - "@berrics"
    # - name: bob
    #   theme: dark
    #   password:
    #     method: clear
    #     value: "bar"
    #   channels:
    #     - "@jonnygiger"
    #     - "@berrics"
    # - name: demo
    #   channels:
    #     - "@jonnygiger"
    #     - "@berrics"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8000

ingress:
  enabled: false
  className: ""
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
